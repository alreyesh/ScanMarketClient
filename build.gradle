// Top-level build file where you can add configuration options common to all sub-projects/modules.

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
//    ext.kotlin_version = '1.6.20-RC'
    ext {
        // Top-level variables used for versioning
       // ext.kotlin_version = '1.5.21'
        ext.kotlin_version = '1.4.0'
        ext.java_version = JavaVersion.VERSION_1_8
    }
    repositories {

        google()
        mavenCentral()
        jcenter()
        mavenLocal()
        maven{url 'https://plugins.gradle.org/m2/'}

    }
    dependencies {

//        classpath "com.android.tools.build:gradle:7.0.3"
        classpath 'com.android.tools.build:gradle:7.4.1'
        classpath 'de.undercouch:gradle-download-task:3.4.3'
        classpath 'com.google.gms:google-services:4.3.10'
        //classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.21'

        classpath "io.realm:realm-gradle-plugin:10.10.0"
        classpath 'com.diffplug.spotless:spotless-plugin-gradle:5.11.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.4.0.2513"
    }
}
allprojects {
    // ...
    repositories {
        // ...
        google()
        jcenter()
        mavenCentral()
        mavenLocal()
        maven {
            name 'ossrh-snapshot'
            //url 'http://oss.sonatype.org/content/repositories/snapshots'
            url 'https://jitpack.io' /**/

        }
        maven{url 'https://plugins.gradle.org/m2/'}
    }

}
subprojects {
    apply plugin: 'com.diffplug.spotless'
    spotless {
        java {
            target "**/*.java"
            trimTrailingWhitespace()
            removeUnusedImports()
            googleJavaFormat()
            endWithNewline()
        }
        kotlin {
            target "**/*.kt"
            trimTrailingWhitespace()
            endWithNewline()
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
